{% macro render(m, mname, api, rootApi, ClassName) %}
{% set lb = "{" %}
{% set rb = "}" %}
{% set pathParams = m.parameters|getPathParams|sort %}

/**
 * {{ m.id }}
{% if m.description %}
 * @desc {{ m.description|oneLine|cleanComments|safe }}
{% endif %}
{% if m.fragment %}
 * @example
 * {{ m.fragment|safe|replace("\n", "\n * ") }}
{% endif %}
 * @alias {{ m.id }}
 * @memberOf! {{ api.name }}({{ api.version }})
 *
 * @param {object{% if not m.parameterOrder and not m.request %}={% endif %}} params Parameters for request
{% if m.parameters %}
{% for pname, p in m.parameters|dictsort %}
 * @param {{ lb }}{{ p.type }}{% if not p.required %}={% endif %}{{ rb }} params.{{ pname|getSafeParamName }} {{ p.description|oneLine|cleanComments|safe }}
{% endfor %}
{% endif %}
{% if m.supportsMediaUpload %}
  {% if m.request %}
    * @param  {object} params.requestBody Media resource metadata
  {% endif %}
  * @param {object} params.media Media object
  * @param {string} params.media.mimeType Media mime-type
  * @param {string|object} params.media.body Media body contents
{% elif m.request %}
  {% if m.request.$ref %}
    * @param {{ lb }}{{ api.name }}({{ api.version }}).{{ m.request.$ref }}{{ rb }} params.requestBody Request body data
  {% else %}
    * @param {object} params.requestBody Request body data
  {% endif %}
{% endif %}
 * @param {object} [options] Optionally override request options, such as `url`, `method`, and `encoding`.
 * @param {callback} callback The callback that handles the response.
 * @return {object} Request object
 */
{% if m.response.$ref %}
  {% set responseType = "Schema$"+m.response.$ref %}
{% elif m.supportsMediaDownload %}
  {% set responseType = "unknown" %}
{% else %}
  {% set responseType = "void" %}
{% endif %}
{{ mname|camelify }}(params: Params${{ClassName}}${{mname|camelify|capitalize}}, options: StreamMethodOptions): GaxiosPromise<Readable>;
{{ mname|camelify }}(params?: Params${{ClassName}}${{mname|camelify|capitalize}}, options?: MethodOptions): GaxiosPromise<{{responseType}}>;
{{ mname|camelify }}(params: Params${{ClassName}}${{mname|camelify|capitalize}}, options: StreamMethodOptions|BodyResponseCallback<Readable>, callback: BodyResponseCallback<Readable>): void;
{{ mname|camelify }}(params: Params${{ClassName}}${{mname|camelify|capitalize}}, options: MethodOptions|BodyResponseCallback<{{responseType}}>, callback: BodyResponseCallback<{{responseType}}>): void;
{{ mname|camelify }}(params: Params${{ClassName}}${{mname|camelify|capitalize}}, callback: BodyResponseCallback<{{responseType}}>): void;
{{ mname|camelify }}(callback: BodyResponseCallback<{{responseType}}>): void;
{{ mname|camelify }}(paramsOrCallback?: Params${{ClassName}}${{mname|camelify|capitalize}}|BodyResponseCallback<{{responseType}}>|BodyResponseCallback<Readable>, optionsOrCallback?: MethodOptions|StreamMethodOptions|BodyResponseCallback<{{responseType}}>|BodyResponseCallback<Readable>, callback?: BodyResponseCallback<{{responseType}}>|BodyResponseCallback<Readable>): void|GaxiosPromise<{{responseType}}>|GaxiosPromise<Readable> {
  let params = (paramsOrCallback || {}) as Params${{ClassName}}${{mname|camelify|capitalize}};
  let options = (optionsOrCallback || {}) as MethodOptions;

  if (typeof paramsOrCallback === 'function') {
    callback = paramsOrCallback;
    params = {} as Params${{ClassName}}${{mname|camelify|capitalize}};
    options = {};
  }

  if (typeof optionsOrCallback === 'function') {
    callback = optionsOrCallback;
    options = {};
  }

  const rootUrl = options.rootUrl || {{ rootApi.rootUrl|buildurl|safe }};
  const parameters = {
    options: Object.assign({
      url: (rootUrl + {{ ('/' + rootApi.servicePath + m.path)|buildurl|safe }}).replace(/([^:]\/)\/+/g, '$1'),
      method: '{{ m.httpMethod }}'
    }, options),
    params,
    {% if m.mediaUpload.protocols.simple.path %}mediaUrl: (rootUrl + {{ ('/' + m.mediaUpload.protocols.simple.path)|buildurl|safe }}).replace(/([^:]\/)\/+/g, '$1'),{% endif %}
    requiredParams: [{% if m.parameterOrder.length %}'{{ m.parameterOrder|join("', '")|safe }}'{% endif %}],
    pathParams: [{% if pathParams.length %}'{{ pathParams|join("', '")|safe }}'{% endif %}],
    context: this.context,
  };
  if (callback) {
    createAPIRequest<{{responseType}}>(parameters, callback as BodyResponseCallback<unknown>);
  } else {
    return createAPIRequest<{{responseType}}>(parameters);
  }
}
{% endmacro %}
